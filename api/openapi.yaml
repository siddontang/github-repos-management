openapi: 3.0.3
info:
  title: GitHub Repository Management Service API
  description: |
    API for managing GitHub repositories, pull requests, and issues across multiple repositories.
    This service allows you to track and manage GitHub resources from different organizations in one place.
  version: 1.0.0
  contact:
    name: GitHub Repository Management Service
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
tags:
  - name: Repositories
    description: Repository management operations
  - name: PullRequests
    description: Pull request operations
  - name: Issues
    description: Issue operations
  - name: Service
    description: Service management operations

paths:
  /repositories:
    get:
      summary: List all managed repositories
      description: Returns a list of all repositories being tracked by the service
      operationId: listRepositories
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repository'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Add a new repository
      description: Add a new GitHub repository to be tracked by the service
      operationId: addRepository
      tags:
        - Repositories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryInput'
      responses:
        '201':
          description: Repository added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Repository already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /repositories/{owner}/{repo}:
    get:
      summary: Get repository details
      description: Returns details about a specific repository
      operationId: getRepository
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
        - $ref: '#/components/parameters/RepoParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Remove a repository
      description: Remove a repository from being tracked by the service
      operationId: removeRepository
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
        - $ref: '#/components/parameters/RepoParam'
      responses:
        '204':
          description: Repository removed successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /repositories/{owner}/{repo}/refresh:
    post:
      summary: Refresh repository data
      description: Force a refresh of the repository data from GitHub
      operationId: refreshRepository
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
        - $ref: '#/components/parameters/RepoParam'
      responses:
        '202':
          description: Refresh initiated
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /pulls:
    get:
      summary: List pull requests
      description: Returns a list of pull requests across all managed repositories
      operationId: listPullRequests
      tags:
        - PullRequests
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
        - name: state
          in: query
          description: Filter by PR state
          schema:
            type: string
            enum: [open, closed, all]
            default: open
        - name: author
          in: query
          description: Filter by PR author
          schema:
            type: string
        - name: repo
          in: query
          description: Filter by repository (format: owner/repo)
          schema:
            type: string
        - name: label
          in: query
          description: Filter by label
          schema:
            type: string
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            enum: [created, updated, comments]
            default: updated
        - name: direction
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: since
          in: query
          description: Filter by date (ISO 8601 format)
          schema:
            type: string
            format: date-time
        - name: group_by
          in: query
          description: Group results by field
          schema:
            type: string
            enum: [repo, author, created_at, updated_at]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PullRequest'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /issues:
    get:
      summary: List issues
      description: Returns a list of issues across all managed repositories
      operationId: listIssues
      tags:
        - Issues
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PerPageParam'
        - name: state
          in: query
          description: Filter by issue state
          schema:
            type: string
            enum: [open, closed, all]
            default: open
        - name: author
          in: query
          description: Filter by issue author
          schema:
            type: string
        - name: repo
          in: query
          description: Filter by repository (format: owner/repo)
          schema:
            type: string
        - name: label
          in: query
          description: Filter by label
          schema:
            type: string
        - name: sort
          in: query
          description: Sort field
          schema:
            type: string
            enum: [created, updated, comments]
            default: updated
        - name: direction
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: since
          in: query
          description: Filter by date (ISO 8601 format)
          schema:
            type: string
            format: date-time
        - name: group_by
          in: query
          description: Group results by field
          schema:
            type: string
            enum: [repo, author, created_at, updated_at]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Issue'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /refresh:
    post:
      summary: Refresh all data
      description: Force a refresh of all repository data from GitHub
      operationId: refreshAllData
      tags:
        - Service
      responses:
        '202':
          description: Refresh initiated
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status:
    get:
      summary: Get service status
      description: Returns the current status of the service
      operationId: getServiceStatus
      tags:
        - Service
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceStatus'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Repository ID
        owner:
          type: string
          description: Repository owner
        name:
          type: string
          description: Repository name
        full_name:
          type: string
          description: Full repository name (owner/name)
        description:
          type: string
          description: Repository description
        url:
          type: string
          format: uri
          description: Repository URL
        is_private:
          type: boolean
          description: Whether the repository is private
        last_synced_at:
          type: string
          format: date-time
          description: Last time the repository was synced
        created_at:
          type: string
          format: date-time
          description: Repository creation time
        updated_at:
          type: string
          format: date-time
          description: Repository last update time
      required:
        - id
        - owner
        - name
        - full_name
        - url
        - is_private
        - last_synced_at
        - created_at
        - updated_at

    RepositoryInput:
      type: object
      properties:
        full_name:
          type: string
          description: Full repository name (owner/name)
      required:
        - full_name

    PullRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Pull request ID
        number:
          type: integer
          description: Pull request number
        title:
          type: string
          description: Pull request title
        body:
          type: string
          description: Pull request body
        state:
          type: string
          enum: [open, closed]
          description: Pull request state
        url:
          type: string
          format: uri
          description: Pull request URL
        html_url:
          type: string
          format: uri
          description: Pull request HTML URL
        repository:
          $ref: '#/components/schemas/RepositoryRef'
        user:
          $ref: '#/components/schemas/User'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        created_at:
          type: string
          format: date-time
          description: Pull request creation time
        updated_at:
          type: string
          format: date-time
          description: Pull request last update time
        closed_at:
          type: string
          format: date-time
          nullable: true
          description: Pull request closing time
        merged_at:
          type: string
          format: date-time
          nullable: true
          description: Pull request merging time
      required:
        - id
        - number
        - title
        - state
        - url
        - html_url
        - repository
        - user
        - created_at
        - updated_at

    Issue:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Issue ID
        number:
          type: integer
          description: Issue number
        title:
          type: string
          description: Issue title
        body:
          type: string
          description: Issue body
        state:
          type: string
          enum: [open, closed]
          description: Issue state
        url:
          type: string
          format: uri
          description: Issue URL
        html_url:
          type: string
          format: uri
          description: Issue HTML URL
        repository:
          $ref: '#/components/schemas/RepositoryRef'
        user:
          $ref: '#/components/schemas/User'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        created_at:
          type: string
          format: date-time
          description: Issue creation time
        updated_at:
          type: string
          format: date-time
          description: Issue last update time
        closed_at:
          type: string
          format: date-time
          nullable: true
          description: Issue closing time
      required:
        - id
        - number
        - title
        - state
        - url
        - html_url
        - repository
        - user
        - created_at
        - updated_at

    RepositoryRef:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Repository ID
        full_name:
          type: string
          description: Full repository name (owner/name)
        url:
          type: string
          format: uri
          description: Repository URL
      required:
        - id
        - full_name
        - url

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User ID
        login:
          type: string
          description: User login name
        avatar_url:
          type: string
          format: uri
          description: User avatar URL
        url:
          type: string
          format: uri
          description: User API URL
        html_url:
          type: string
          format: uri
          description: User HTML URL
      required:
        - id
        - login
        - url
        - html_url

    Label:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Label ID
        name:
          type: string
          description: Label name
        color:
          type: string
          description: Label color (hex)
        description:
          type: string
          description: Label description
      required:
        - id
        - name
        - color

    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: Current page number
        per_page:
          type: integer
          description: Number of items per page
        total:
          type: integer
          description: Total number of items
        total_pages:
          type: integer
          description: Total number of pages
      required:
        - page
        - per_page
        - total
        - total_pages

    ServiceStatus:
      type: object
      properties:
        status:
          type: string
          enum: [ok, degraded, error]
          description: Overall service status
        version:
          type: string
          description: Service version
        uptime:
          type: integer
          description: Service uptime in seconds
        repositories:
          type: object
          properties:
            total:
              type: integer
              description: Total number of repositories
            syncing:
              type: integer
              description: Number of repositories currently syncing
            error:
              type: integer
              description: Number of repositories with sync errors
          required:
            - total
            - syncing
            - error
        last_sync:
          type: string
          format: date-time
          description: Last time any repository was synced
        github_rate_limit:
          type: object
          properties:
            limit:
              type: integer
              description: GitHub API rate limit
            remaining:
              type: integer
              description: Remaining GitHub API calls
            reset_at:
              type: string
              format: date-time
              description: Time when the rate limit resets
          required:
            - limit
            - remaining
            - reset_at
      required:
        - status
        - version
        - uptime
        - repositories
        - github_rate_limit

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details
      required:
        - code
        - message

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number
      schema:
        type: integer
        default: 1
        minimum: 1

    PerPageParam:
      name: per_page
      in: query
      description: Number of items per page
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100

    OwnerParam:
      name: owner
      in: path
      description: Repository owner
      required: true
      schema:
        type: string

    RepoParam:
      name: repo
      in: path
      description: Repository name
      required: true
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error' 